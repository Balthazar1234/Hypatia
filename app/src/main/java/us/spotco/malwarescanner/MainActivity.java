/*
Hypatia: An realtime malware scanner for Android
Copyright (c) 2018 Divested Computing, Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
package us.spotco.malwarescanner;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.view.MenuItem;

public class MainActivity extends FragmentActivity {

    private final FragmentManager fragmentManager = getSupportFragmentManager();
    private Fragment activeFragment = null;
    private final Fragment scannerFragment = new ScannerFragment();
    private final Fragment logFragment = new LogFragment();
    private final Fragment databaseFragment = new DatabaseFragment();
    private final Fragment settingsFragment = new SettingsFragment();


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
        navigation.setItemIconTintList(null);

        fragmentManager.beginTransaction().add(R.id.main_fragment, logFragment, "History").hide(logFragment).commit();
        fragmentManager.beginTransaction().add(R.id.main_fragment, databaseFragment, "Databases").hide(databaseFragment).commit();
        fragmentManager.beginTransaction().add(R.id.main_fragment, settingsFragment, "Settings").hide(settingsFragment).commit();
        fragmentManager.beginTransaction().add(R.id.main_fragment, scannerFragment, "Scanner").commit();
        activeFragment = scannerFragment;
    }

    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {


        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {
                case R.id.navigation_scanner:
                    fragmentManager.beginTransaction().hide(activeFragment).show(scannerFragment).commit();
                    activeFragment = scannerFragment;
                    return true;
                case R.id.navigation_log:
                    fragmentManager.beginTransaction().hide(activeFragment).show(logFragment).commit();
                    activeFragment = logFragment;
                    return true;
                case R.id.navigation_databases:
                    fragmentManager.beginTransaction().hide(activeFragment).show(databaseFragment).commit();
                    activeFragment = databaseFragment;
                    return true;
                case R.id.navigation_settings:
                    fragmentManager.beginTransaction().hide(activeFragment).show(settingsFragment).commit();
                    activeFragment = settingsFragment;
                    return true;
            }
            return false;
        }
    };
}
