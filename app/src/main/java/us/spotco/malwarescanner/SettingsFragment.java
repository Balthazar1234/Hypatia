/*
Hypatia: A realtime malware scanner for Android
Copyright (c) 2018 Divested Computing, Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/
package us.spotco.malwarescanner;


import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.preference.PreferenceFragmentCompat;
import android.widget.Toast;

/**
 * A simple {@link Fragment} subclass.
 */
public class SettingsFragment extends PreferenceFragmentCompat implements SharedPreferences.OnSharedPreferenceChangeListener {

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
        setPreferencesFromResource(R.xml.fragment_settings, rootKey);
    }

    @Override
    public void onResume() {
        super.onResume();
        Utils.prefs.registerOnSharedPreferenceChangeListener(this);

    }

    @Override
    public void onPause() {
        Utils.prefs.unregisterOnSharedPreferenceChangeListener(this);
        super.onPause();
    }

    @Override
    public void onSharedPreferenceChanged(SharedPreferences prefs, String key) {
        if (key.equals("network_use_tor")) {
            if (prefs.getBoolean("network_use_tor", false)) {
                if (!Utils.isOrbotInstalled(getContext())) {
                    prefs.edit().putBoolean("ONION_ROUTING", false).apply();
                    Toast.makeText(getContext(), R.string.toast_orbot_unavailable, Toast.LENGTH_SHORT).show();
                }
            }
        }

        if (key.equals("scanner_realtime_enabled")) {
            if (prefs.getBoolean("scanner_realtime_enabled", false)) {
                Utils.considerStartService(getContext());
            } else {
                Intent realtimeScanner = new Intent(getContext(), MalwareScannerService.class);
                getContext().stopService(realtimeScanner);
            }
        }
    }
}
